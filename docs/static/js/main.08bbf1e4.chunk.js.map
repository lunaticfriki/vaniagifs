{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","VaniaGifApp.js","index.js"],"names":["AddCategory","setCategories","useState","value","setValue","className","onSubmit","e","preventDefault","trim","length","cats","placeholder","type","onChange","target","getGifs","category","a","url","encodeURI","process","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","href","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","gif","key","VaniaGifApp","categories","ReactDOM","render","document","getElementById"],"mappings":"4LA8BeA,EA3BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACfC,mBAAS,IADM,mBAClCC,EADkC,KAC3BC,EAD2B,KAYzC,OACE,qBAAKC,UAAU,iBAAf,SACE,uBAAMC,SAXW,SAACC,GACpBA,EAAEC,iBACEL,EAAMM,OAAOC,QAAU,IAC3BT,GAAc,SAACU,GAAD,OAAWR,GAAX,mBAAqBQ,OACnCP,EAAS,MAOP,UACE,uBACEQ,YAAa,YACbT,MAAOA,EACPU,KAAK,OACLC,SATa,SAACP,GAAD,OAAOH,EAASG,EAAEQ,OAAOZ,UAWxC,uBAAOU,KAAK,SAASV,MAAM,c,8BCxBtBa,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,6BAGCI,oCAHD,SAIHC,MAAMH,GAJH,cAIfI,EAJe,gBAKEA,EAAIC,OALN,uBAKbC,EALa,EAKbA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXX,IAAG,UAAES,EAAIG,cAAN,aAAE,EAAYC,iBAAiBb,QAVjB,kBAadO,GAbc,4CAAH,sDCaLO,EAXK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOX,EAAU,EAAVA,IAC5B,OACE,oBAAId,UAAU,mDAAd,SACE,oBAAG6B,KAAMf,EAAKJ,OAAO,UAArB,UACE,qBAAKoB,IAAKhB,EAAKiB,IAAKN,IACpB,6BAAKA,UCiBEO,EApBC,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACdf,mBAAS,CACjCuB,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAUxC,OAJAC,qBAAU,WACRzB,EAAQC,GAAUyB,MAAK,SAACC,GAAD,OAAUH,EAAS,CAAEf,KAAMkB,EAAML,SAAS,SAChE,CAACrB,IAEGsB,EDRyBK,CAAa3B,GAA/BS,EADkB,EACxBD,KAER,OAHgC,EACZa,QAGX,oBAAIjC,UAAU,mCAAd,wBAGP,sBAAKA,UAAU,aAAf,UACE,iCACE,oBAAIA,UAAU,oCAAd,SAAmDY,MAErD,kCACGS,EAAKC,KAAI,SAACkB,GAAD,OACR,wBAAC,EAAD,2BAAiBA,GAAjB,IAAsBC,IAAKD,EAAIhB,eEO1BkB,EApBK,WAAO,IAAD,EACY7C,mBAAS,CAAC,KADtB,mBACjB8C,EADiB,KACL/C,EADK,KAGxB,OACE,sBAAKI,UAAU,aAAf,UACE,mCACE,oBAAIA,UAAU,+CAAd,wBAGA,cAAC,EAAD,CAAaJ,cAAeA,OAE9B,6BACG+C,EAAWrB,KAAI,SAACV,GAAD,OACd,cAAC,EAAD,CAASA,SAAUA,GAAeA,YCZ5CgC,IAASC,OAAO,cAAC,EAAD,IAAiBC,SAASC,eAAe,W","file":"static/js/main.08bbf1e4.chunk.js","sourcesContent":["import { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ({ setCategories }) => {\n  const [value, setValue] = useState('')\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (value.trim().length <= 2) return\n    setCategories((cats) => [value, ...cats])\n    setValue('')\n  }\n\n  const handleChange = (e) => setValue(e.target.value)\n\n  return (\n    <div className=\"c-add-category\">\n      <form onSubmit={handleSubmit}>\n        <input\n          placeholder={'Search...'}\n          value={value}\n          type=\"text\"\n          onChange={handleChange}\n        />\n        <input type=\"submit\" value=\"Add\" />\n      </form>\n    </div>\n  )\n}\n\nexport default AddCategory\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n}\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=30&api_key=${process.env.REACT_APP_API_KEY}`\n  const res = await fetch(url)\n  const { data } = await res.json()\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    }\n  })\n  return gifs\n}\n","import PropTypes from 'prop-types'\n\nconst GifGridItem = ({ title, url }) => {\n  return (\n    <li className=\"c-gif-card animate__animated animate__bounceInUp\">\n      <a href={url} target=\"__blank\">\n        <img src={url} alt={title} />\n        <h4>{title}</h4>\n      </a>\n    </li>\n  )\n}\n\nexport default GifGridItem\n\nGifGridItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n}\n","import PropTypes from 'prop-types'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport GifGridItem from './GifGridItem'\n\nconst GifGrid = ({ category }) => {\n  const { data: gifs, loading } = useFetchGifs(category)\n\n  if (loading)\n    return <h3 className=\"animate__animated animate__flash\">Loading...</h3>\n\n  return (\n    <div className=\"c-category\">\n      <header>\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n      </header>\n      <section>\n        {gifs.map((gif) => (\n          <GifGridItem {...gif} key={gif.id} />\n        ))}\n      </section>\n    </div>\n  )\n}\n\nexport default GifGrid\n\nGifGrid.propTypes = {\n  category: PropTypes.string.isRequired,\n}\n","import { useState, useEffect } from 'react'\nimport { getGifs } from '../helpers/getGifs'\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  })\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => setState({ data: imgs, loading: false }))\n  }, [category])\n\n  return state\n}\n","import { useState } from 'react'\nimport AddCategory from './components/AddCategory'\nimport GifGrid from './components/GifGrid'\n\nconst VaniaGifApp = () => {\n  const [categories, setCategories] = useState([''])\n\n  return (\n    <div className=\"c-vaniagif\">\n      <header>\n        <h1 className=\"c-gif-card animate__animated animate__bounce\">\n          Vaniagifs!\n        </h1>\n        <AddCategory setCategories={setCategories} />\n      </header>\n      <ol>\n        {categories.map((category) => (\n          <GifGrid category={category} key={category} />\n        ))}\n      </ol>\n    </div>\n  )\n}\n\nexport default VaniaGifApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport VaniaGifApp from './VaniaGifApp'\n\nReactDOM.render(<VaniaGifApp />, document.getElementById('root'))\n"],"sourceRoot":""}